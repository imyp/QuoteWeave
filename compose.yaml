services:
  db:
    image: pgvector/pgvector:pg16
    ports:
      - "5432:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d quoteweave_demo"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=quoteweave_demo
      - POSTGRES_PORT=5432
  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - default
    depends_on:
      db:
        condition: service_healthy
  prestart:
      image: backend
      build:
        context: ./backend
      networks:
        - default
      depends_on:
        db:
          condition: service_healthy
          restart: true
      command: bash prestart.sh
      environment:
        - PGDATA=/var/lib/postgresql/data/pgdata
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_USER=postgres
        - POSTGRES_DB=quoteweave_demo
        - POSTGRES_SERVER=db
        - POSTGRES_PORT=5432
  backend:
      image: backend
      restart: always
      networks:
        - default
      depends_on:
        db:
          condition: service_healthy
          restart: true
        prestart:
          condition: service_completed_successfully
      environment:
        - POSTGRES_SERVER=db
        - POSTGRES_PORT=5432
        - POSTGRES_DB=quoteweave_demo
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
      build:
        context: ./backend
      ports:
        - "8000:8000"
  frontend-next:
    image: frontend-next
    restart: always
    build:
      context: ./frontend-next
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - default
    depends_on:
      backend:
        condition: service_started
  # frontend:
  #   image: frontend
  #   restart: always
  #   networks:
  #     - default
  #   ports:
  #     - "5173:80"
  #   build:
  #     context: ./frontend
  #     args:
  #       - VITE_API_URL=http://localhost:8000
  #       - NODE_ENV=development

volumes:
  app-db-data:

